{"/physics-in-games/pages/design/draft/": {
    "title": "Design Draft",
    "keywords": "Jekyll",
    "url": "/physics-in-games/pages/design/draft/",
    "body": "This is an draft page."
  },"/physics-in-games/pages/about/": {
    "title": "About",
    "keywords": "Jekyll",
    "url": "/physics-in-games/pages/about/",
    "body": "This is an about page."
  },"/physics-in-games/pages/contact/": {
    "title": "Contact",
    "keywords": "Jekyll",
    "url": "/physics-in-games/pages/contact/",
    "body": "kozakromch@yandex.ru"
  },"/physics-in-games/jekyll/2024-03-28-numerical_method.html": {
    "title": "Численные методы",
    "keywords": "Jekyll",
    "url": "/physics-in-games/jekyll/2024-03-28-numerical_method.html",
    "body": "В прошлой лекции мы попытались решить уравнения движения аналитически. Поскольку некоторые уравнения были не разрешимы, то мы их линеаризовывали. Однако многие эффекты терялись поскольку были нелинейными. Поскольку аналитически решить все уравнения невозможно, то мы перейдем к численным методам. Посмотрим на уравнение в общем виде \\begin{equation} \\dot{x} = f(x) \\end{equation} и мы пытались получить из него решение вида \\begin{equation} x = F(t) + C \\end{equation} подставив в которое начальные коодинаты мы могли найти положение в любой момент времени. Теперь же мы будем искать траекторию, т.е. из начальной координаты $x_0$ численно находим положение в следующий момент времени $x_1$, из него аналогично $x_2$ и т.д. Где раньше мы находили все фазовые траектории, теперь мы будем находить только одну, и ту приближенно. Методы Эйлера Воспользуемся следующим приближением: \\begin{equation} \\dot{x} = \\frac{dx}{dt} = \\lim_{\\Delta t\\rightarrow 0} \\frac{x(t + \\Delta t) -x(t)}{\\Delta t} \\approx \\frac{x(t + \\Delta t) -x(t)}{\\Delta t}, \\end{equation} Пронумеровав положения в узлах и подставив в начальное уравнение, получим \\begin{equation} \\begin{split} \\dot{x_k} = \\frac{x_{k+1} -x_k}{\\Delta t} = f(x_k),\\\\ x_{k+1} = x_k + \\dot{x_k}\\Delta t = x_k + f(x_k)\\Delta t \\end{split} \\end{equation} Как можно заметить, результатом стала явная схема, т.к. зная $x_k$, можно напрямую вычислить $x_{k+1}$. Построим аналогично неявную схему: \\begin{equation} \\begin{split} \\dot{x} \\approx \\frac{x(t) - x(t - \\Delta t)}{\\Delta t},\\\\ \\dot{x_k} = \\frac{x_k - x_{k-1}}{\\Delta t} = f(x_k),\\\\ x_{k+1} = x_k + \\dot{x_{k+1}}\\Delta t = x_k + f(x_{k+1})\\Delta t \\end{split} \\end{equation} Понятно, что неявная схема является более сложной, т.к. в ней нельзя напрямую вычислить следующее положение по предыдущему. Придется или преобразовывать $f(x_{k+1})$, или итеративно подбирать наилучший $x_{k+1}$. Зачем тогда вообще пользоваться неявным методом? Дело в том, что прямой метод \"вкачивает\" в систему энергию, что в конкретных случаях может быть опасно. Обратный метод, в свою очередь, энергию \"выкачивает\". Он тоже не дает точного приближения, но система с меньшей энергией в среднем более стабильна, за счет чего неявная схема зачастую выигрывает против явной. \\subsubsection{Новая пружинка} Рассмотрим уже обсужденную задачу с пружинкой, но добавим теперь вязкое трение. К уже обсужденным закону Гука ($F(x) = -k \\cdot x$) и второму закону Ньютона ($\\Sigma \\vec{F} = m \\cdot \\vec{a}$) добавится закон вязкого трения: \\begin{equation} \\vec{F} = -c \\cdot \\vec{V} \\end{equation} \\input{pics/Scheme.tex} Введем новые обозначения: \\begin{equation} \\begin{split} d = \\frac{c}{2 \\sqrt{km}},\\\\ \\omega_0 = \\sqrt{\\frac{k}{m}} \\end{split} \\end{equation} Подставляя всё это во второй закон Ньютона, получим \\begin{equation} \\ddot{x} + 2d\\omega_0\\dot{x} + \\omega_0^2 x = 0 \\end{equation} Как и ранее, запишем вектор \\begin{equation} z = \\begin{bmatrix} 1 &amp; x &amp; x^2 \\\\ 1 &amp; y &amp; y^2 \\\\ 1 &amp; z &amp; z^2 \\\\ \\end{bmatrix} \\end{equation} Тогда уравнение перепишем в виде \\begin{equation} \\dot{z} = \\begin{bmatrix} 0 &amp; 1 \\\\ -\\omega_0^2 &amp; -2d\\omega_0 \\\\ \\end{bmatrix} \\cdot z = A \\cdot z \\end{equation} Подставляя на место $\\dot{z}$ обсужденное выше приближенное значение, получим следующие равенства для явной$(1)$ и неявной$(2)$ схем: \\begin{equation} \\begin{split} z_{k+1} = (I + A\\cdot\\Delta t)\\cdot z_k = F\\cdot z_k\\qquad (1)\\\\ z_{k+1} = (I - A\\cdot\\Delta t)^{-1}\\cdot z_k = B\\cdot z_k\\qquad (2) \\end{split} \\end{equation} По индукции, получим \\begin{equation} \\begin{split} z_k = F^k\\cdot z_0\\qquad (1)\\\\ z_k = B^k\\cdot z_0\\qquad (2) \\end{split} \\end{equation} Зона устойчивости \\input{pics/stable_zone_fwd.tex} Когда обсуждались аналитические решения, было показано, что для устойчивости решения \\begin{equation} \\dot{y}=A\\cdot y \\end{equation} достаточно условия \\begin{equation} Re(eig(A)) &lt; 0. \\end{equation} Попробуем найти аналогичные условия для явного и неявного методов Эйлера. Для явного метода, переходя к собственным векторам, получим \\begin{equation} y_{k+1} = (1 + \\Delta t \\cdot \\lambda)\\cdot y_k \\end{equation} Для устойчивости решения необходимо \\begin{equation} |1 + \\Delta t \\cdot \\lambda| &lt; 1 \\end{equation} Заметим, что меньшие значения $\\lambda$ и $\\Delta t$ имеют больший шанс попадания в зону стабильности. \\input{pics/stable_zone_bwd.tex} Для неявного метода, переходя к собственным векторам, получим \\begin{equation} y_{k+1} = (1 - \\Delta t \\cdot \\lambda)^{-1}\\cdot y_k \\end{equation} Для устойчивости решения необходимо \\begin{equation} |(1 - \\Delta t \\cdot \\lambda)^{-1}| &lt; 1 \\Leftrightarrow |1 - \\Delta t \\cdot \\lambda| &gt; 1 \\end{equation} Сразу можно заметить, что зона устойчивости для неявного метода больше, чем у явного; однако при некоторых собственных значений уменьшение временного шага ухудшает стабильность,\\\\чего для явного метода не наблюдалось."
  }}
